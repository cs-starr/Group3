#!/usr/bin/env python3

"""
Program: Creating Database
File: db_create.py
Version: V1.0
Date created: 01/04/2022
Function: To create tables insert information into database
Author: Janani Govindarasan
Database tier of implementation of a Chromosome (7) Browser
This program contains functions that are used by db_parser.py to create tables and
to insert information into database
Usage: db_parser.py 
"""


import sys
sys.path.insert(0, "..")
import db_parser
import config as cf
import pymysql.cursors


connection = pymysql.connect(cf.mysql["host"], cf.mysql["user"], cf.mysql["password"])

try:
    with connection.cursor() as cursor:
        cursor.execute('CREATE DATABASE IF NOT EXISTS gj001')    
 
finally:
    connection.close()
    

#creating gene table 
GENEsummary = "CREATE TABLE IF NOT EXISTS GENE_TABLE
                (
                    accession      VARCHAR(100)    NOT NULL,\
                    gene           VARCHAR(80)     NOT NULL,\
                    product        VARCHAR(80)     NOT NULL,\
                    location       VARCHAR(80)     NOT NULL,\
                    PRIMARY KEY (accession))
                 )"
		
#creating CDS table     
CDSsummary = "CREATE TABLE IF NOT EXISTS CDS_TABLE
                (
                    accession      VARCHAR(100)     NOT NULL,\
                    gene           VARCHAR(80)      NOT NULL,\
                    product        VARCHAR(80)      NOT NULL,\
                    location       VARCHAR(80)      NOT NULL,\
		    CDS            VARCHAR(80)      NOT NULL,\
                    PRIMARY KEY (accession))
                 )"
		
		
#creating DNA table     
DNAsummary = "CREATE TABLE IF NOT EXISTS DNA_TABLE
                (
                    accession      VARCHAR(100)     NOT NULL,\
                    sequence       MEDIUMTEXT       NOT NULL,\
                    aa_seq         MEDIUMTEXT       NOT NULL,\
                    protein_id     VARCHAR(80)      NOT NULL,\
                    PRIMARY KEY (accession))
                 )"



        
# Create a tables
connection = pymysql.connect(cf.mysql["host"],
                             cf.mysql["user"],
                             cf.mysql["password"],
                             cf.mysql["db"],
                             cursorclass=pymysql.cursors.DictCursor)



try:
    with connection.cursor() as cursor:
        
        cursor.execute('DROP TABLE IF EXISTS DNA')
        cursor.execute('DROP TABLE IF EXISTS CDS')
        cursor.execute('DROP TABLE IF EXISTS GENE')
        
        cursor.execute(GENEsummary)
        cursor.execute(DNAsummary)
	cursor.execute(CDSsummary)

        connection.commit()


finally:
    connection.close() 

    
    
