#!/usr/bin/env python3

import re
import json
import config as cf
import pymysql.cursors
import sys


    """getting relevant information from genebank file. Accession number, location, genes, amino acid sequence, dna sequence
    """"
    
sequence=[]
chrom_7_data = []

with open('chrom_CDS_7', 'r') as f:
    genebank = f.read().split('//\n')

def extract_info():

#regex patterns
accession = re.compile(r'ACCESSION\s+(.+)')#pattern to find accession numbers
find_location = re.compile(r'map="(.+)')#regex pattern to find all location
find_gene = re.compile(r'/gene="(.+)') # regex pattern to find all genes
prt = re.compile(r'product="(.+)')#find products
find_seq = re.compile(r'translation="([A-Z\s]+)"', re.DOTALL)#find aa_seq
origin=re.compile(r'ORIGIN(.+)',re.DOTALL,)#find origin
c = re.compile(r'(?<=CDS)(((?:.*|.|\n)*))(?=\s+\/gene|\s+\/codon)')
p=re.compile(r'protein_id="(.+)')

#using re.compile to find matches
#using re.compile to find matches
for i in genebank:

    if 'CDS' in i:
        cds=c.findall(i)[0]#find all cds values

    if 'accession' in i:
        accession_number = accession.findall(i)[0]#all accession numbers


    if 'map=' in i:
        location = find_location.findall(i)[0] # all location findings

    
    if '/gene=' in i:
        gene = find_gene.findall(i)[0]#all geneids

   

    if 'product=' in i:
        product = prt.findall(i)[0]#all product numbers

           
    if  'translation' in i:
        aa_seq = find_seq.findall(i)[0]#amino acid sequences for each entry



    if 'ORIGIN' in i:
        origin2=origin.findall(i)#findng origin for each entry

        for x in origin2:
            origin2=re.compile(r'[a-z]+',re.DOTALL)#finding all lower case letters
            origin2 = origin2.findall(x)
            origin2_seq= ''.join(origin2)#joining sequences
            sequence.append(origin2_seq)
            

    if 'protein_id' in i:
        protein_id= p.findall(i)[0].strip('"')#protein ids for each entry
        
 
    #creating summary tables   
    #populate tables

    summary = "INSERT INTO GENE(accession, version, source, definition) VALUES(%s, %s, %s, %s)"
    summaryvalues = (accession, gene, product, location)


    cdssummary = "INSERT INTO CDS(accession, sequence) VALUES(%s, %s)"
    cdsvalues = (gene,product,protein_id,location,aa_seq,accession)

    dnasummary = "INSERT INTO DNA(accession,sequence)VALUES(%s, %s)"
    dnavalues = (accession,sequence) 
    

    try:
        
        ## create database connection
        connection = pymysql.connect(cf.mysql["host"],
                                     cf.mysql["user"],
                                     cf.mysql["password"],
                                     cf.mysql["db"],
                                     cursorclass=pymysql.cursors.DictCursor)
        with connection.cursor() as cursor:

             cursor.execute(summary, summaryvalues)
             cursor.execute(cdssummary, cdsalues)
             cursor.execute(dnasummary, dnavalues)

             connection.commit()

    finally:
        connection.close()

main()
